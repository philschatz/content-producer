#!/bin/bash
cd "$(dirname "$0")/.." || exit 111
source ./script/bootstrap || exit 111

# Pull in the BOOK_CONFIGS and STYLE_NAMES
source ./books.txt || exit 1

if [ ! "${1}" == "" ]; then
  if [[ "${2}" ]]; then
    STYLE_NAMES=("${1} ${2}")
  else
    die "either 0 or 2 arguments (style name and book name) are required."
  fi
fi

if [[ ${#STYLE_NAMES[@]} == 0 ]]; then
  die "No styles were found. Check books.txt"
fi

for style_config in "${STYLE_NAMES[@]}"; do
  read -r style_name book_name <<< "${style_config}"

  book_baked="./data/${book_name}/collection.baked.xhtml"
  book_test_dir="./styles/books/${style_name}/tests"
  book_test_min_snippet="${book_test_dir}/baked-min-snippet-${book_name}.xhtml"
  book_test_min_snippet_temp="${book_test_min_snippet}.tmp"
  book_tests=$(find ./styles/books/"${style_name}"/tests/ -type f -print0 | xargs -0I {} basename {})
  # book_tests=$(cd "${book_test_dir}" && ls -- *html)


  # Create the coverage directory if it does not exist
  [[ -e "./coverage" ]] || try mkdir "./coverage/"

  # Rebuild the min-snippet file if the baked book exists (not on travis)
  if [[ -f ${book_baked} ]]; then
    do_progress_quiet "Rebuilding min-snippet for ${style_name}" \
      "$(npm bin)/min-snippet" "${book_baked}" "${book_test_min_snippet_temp}"
    try xmllint --pretty 2 "${book_test_min_snippet_temp}" > "${book_test_min_snippet}"
    try rm "${book_test_min_snippet_temp}"
  fi

  for platform in "${PLATFORMS[@]}"; do
    book_style="./styles/output/${style_name}-${platform}.css"
    for test_name in ${book_tests}; do
      test_file="${book_test_dir}/${test_name}"
      lcov_css_file="./coverage/${style_name}-${test_name}-css.lcov"
      lcov_scss_file="./coverage/${style_name}-${test_name}-scss.lcov"

      # Verify that the file is valid XML (attributes might not be escaped, closing tags might not be correct, etc)
      try xmllint "${test_file}" --noout

      ignore_declarations="''"
      if [[ ${platform} = 'pdf' ]]; then
        ignore_declarations="content,bookmark-level,prince-caption-page,box-decoration-break,prince-image-resolution,prince-background-image-resolution,prince-page-group"
      fi

      # Report coverage of the `.scss` files _and_ the `.css` files
      do_progress_quiet "Running SCSS coverage - test: ${test_name} - style: ${style_name} - platform: ${platform}" \
        "$(npm bin)/css-coverage" --css "${book_style}" --html "${test_file}" --lcov "${lcov_scss_file}" --ignore-declarations ${ignore_declarations}
      do_progress_quiet "Running CSS coverage - test: ${test_name} - style: ${style_name} - platform: ${platform}" \
        "$(npm bin)/css-coverage" --css "${book_style}" --html "${test_file}" --lcov "${lcov_css_file}" --ignore-source-map --ignore-declarations ${ignore_declarations}
    done
  done

done
