#!/bin/bash
cd "$(dirname "$0")/.." || exit 111
source ./script/bootstrap || exit 111

arg1=$1

# Pull in the BOOK_CONFIGS
source ./books.txt || exit 1

# Check command line args

if [[ -z "${arg1}" ]]; then
  _say 'This script bakes the book and then compares to the prepared book'
  _say '(done earlier, usually in another branch)'
  _say ''
  _say "Valid books are (from ./books.txt):"
  for book_config in "${BOOK_CONFIGS[@]}"; do
    read -r book_name recipe_name uuid _ <<< "${book_config}"
    _say "${book_name}"
  done

  die 'Argument Missing. You must specify the name of the book as the 1st argument or --all for all books.'
fi


if [[ ! "${arg1}" == "--all" ]]; then
  # Filter BOOK_CONFIGS to only contain the book you want to fetch
  for book_config in "${BOOK_CONFIGS[@]}"; do
    read -r book_config_name recipe_name uuid _ <<< "${book_config}"

    if [[ "${arg1}" = "${book_config_name}" ]]; then
      BOOK_CONFIGS=("${book_config_name} ${recipe_name} ${uuid}")
      found_config=1
      break
    fi
  done

  if [[ ! 1 -eq "${found_config}" ]]; then
    _say "Valid books are (from ./books.txt):"
    for book_config in "${BOOK_CONFIGS[@]}"; do
      read -r book_name recipe_name uuid _ <<< "${book_config}"
      _say "${book_name}"
    done
    die "Could not find Book info for book named ${arg1}"
  fi
fi

for book_config in "${BOOK_CONFIGS[@]}"; do
  read -r book_name recipe_name uuid _ <<< "${book_config}"

  baked_file="./data/${book_name}/collection.baked.xhtml"
  prepared_file="./data/${book_name}/collection.prepared.xhtml"
  formatted_file="./data/${book_name}/collection.formatted.xhtml"

  if [[ -s "${prepared_file}" ]]; then

    do_progress_quiet "Baking ${book_name} book" \
      ./script/bake-book "${book_name}" --use-repeatable-ids

    # format the HTML so it is easily diff-able
    try mv "${baked_file}" "${formatted_file}"
    try xmllint --pretty 2 "${formatted_file}" > "${baked_file}"
    try rm "${formatted_file}"

    diff_count=$(diff "${prepared_file}" "${baked_file}" | wc -l)

    if [[ 0 -ne "${diff_count}" ]]; then
      _say "There were ${diff_count} differences found"
      _say "To see all of them run the following:"
      _say "diff ${prepared_file} ${baked_file}"
      if [[ ! ${DO_ALL} ]]; then
        die "Exiting because differences were found"
      fi
    fi

  else

    _say "SKIPPING ${book_name} because the prepared file was not found."
    _say "Did you run './script/diff-book-prepare ${book_name}' earlier?"
  fi


done
